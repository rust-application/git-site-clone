name: Publish to crates.io and draft release

on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.89.0
      - run: |
          cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
  build:
    name: Build ${{ matrix.os }} / ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # ----------------------------------------------------
        #  Native GitHub runners – no self‑hosted required
        # ----------------------------------------------------
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          # ---- Linux ----------------------------------------------------
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          # ---- macOS ----------------------------------------------------
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          # ---- Windows ----------------------------------------------------
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: x86_64-pc-windows-gnu
    env:
      RUSTFLAGS: -C target-cpu=native
    steps:
      # -------------------------------------------------------------
      # Checkout the source
      # -------------------------------------------------------------
      - uses: actions/checkout@v4

      # -------------------------------------------------------------
      # Install Rust toolchain for the target
      # -------------------------------------------------------------
      - uses: dtolnay/rust-toolchain@1.89.0
        with:
          targets: ${{ matrix.target }}

      # -------------------------------------------------------------
      # Install X11 dev libs on the Ubuntu runner only
      # -------------------------------------------------------------
      - name: Install X11 libraries (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libx11-xcb-dev libxkbcommon-dev

      # -------------------------------------------------------------
      # Build
      # -------------------------------------------------------------
      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }} --features clipboard

      # -------------------------------------------------------------
      # Archive the binary (zip on Windows, tar.gz elsewhere)
      # -------------------------------------------------------------
      - name: Archive
        id: archive
        run: |
          BIN=${{ github.event.repository.name }}          # <‑‑ change if binary name differs
          ARTIFACT="target/${{ matrix.target }}/release/${BIN}"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            ARTIFACT="${ARTIFACT}.exe"
          fi
          mkdir -p dist
          cp "$ARTIFACT" dist/

          if [[ "$RUNNER_OS" == "Windows" ]]; then
            7z a -tzip dist/${BIN}-${{ matrix.target }}.zip dist/*
            echo "artifact=${BIN}-${{ matrix.target }}.zip" >> "$GITHUB_OUTPUT"
          else
            tar czf dist/${BIN}-${{ matrix.target }}.tar.gz -C dist .
            echo "artifact=${BIN}-${{ matrix.target }}.tar.gz" >> "$GITHUB_OUTPUT"
          fi

      # -------------------------------------------------------------
      # Upload the archive as a job artifact for the release step
      # -------------------------------------------------------------
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: dist/${{ steps.archive.outputs.artifact }}
          retention-days: 1   # keep it only for the next job

  release:
    name: Release on GitHub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: Release ${{ github.ref_name }}
          tag: ${{ github.ref }}