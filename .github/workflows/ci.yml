name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build ${{ matrix.os }} / ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # ----------------------------------------------------
        #  Native GitHub runners – no self‑hosted required
        # ----------------------------------------------------
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          # ---- Linux ----------------------------------------------------
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          # ---- macOS ----------------------------------------------------
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          # ---- Windows ----------------------------------------------------
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: x86_64-pc-windows-gnu
    env:
      RUSTFLAGS: -C target-cpu=native
    steps:
      # -------------------------------------------------------------
      # Checkout the source
      # -------------------------------------------------------------
      - uses: actions/checkout@v4

      # -------------------------------------------------------------
      # Install Rust toolchain for the target
      # -------------------------------------------------------------
      - uses: dtolnay/rust-toolchain@1.89.0
        with:
          targets: ${{ matrix.target }}

      # -------------------------------------------------------------
      # Install X11 dev libs on the Ubuntu runner only
      # -------------------------------------------------------------
      - name: Install X11 libraries (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libx11-xcb-dev libxkbcommon-dev

      # -------------------------------------------------------------
      # Build
      # -------------------------------------------------------------
      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }} --features clipboard
