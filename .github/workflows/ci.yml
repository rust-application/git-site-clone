name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build ${{ matrix.os }} / ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [x86_64, aarch64]
        include:
          - os: macos-13
            arch: x86_64
          - os: macos-latest
            arch: aarch64
    env:
      RUSTFLAGS: -C target-cpu=native
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install X11 libraries (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libx11-xcb-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev
      - name: Build
        run: |
          cargo build --release
      - name: Test
        run: |
          cargo test --release
      - name: Archive
        id: archive
        run: |
          BIN=${{ github.event.repository.name }}
          ARTIFACT="target/release/${BIN}"
          TARGET=`rustc -vV | awk '/^host/ { print $2 }'`
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            ARTIFACT="${ARTIFACT}.exe"
          fi
          mkdir -p dist
          cp "$ARTIFACT" dist/
          echo "target=${TARGET}" >> "$GITHUB_OUTPUT"

          if [[ "$RUNNER_OS" == "Windows" ]]; then
            7z a -tzip dist/${BIN}-${TARGET}.zip dist/*
            echo "artifact=${BIN}-${TARGET}.zip" >> "$GITHUB_OUTPUT"
          else
            tar czf dist/${BIN}-${TARGET}.tar.gz dist/${BIN}
            echo "artifact=${BIN}-${TARGET}.tar.gz" >> "$GITHUB_OUTPUT"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.archive.outputs.target }}
          path: dist/${{ steps.archive.outputs.artifact }}
          retention-days: 1
