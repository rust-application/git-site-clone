name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build ${{ matrix.os }} / ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # ----------------------------------------------------
        #  Native GitHub runners – no self‑hosted required
        # ----------------------------------------------------
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64, aarch64]
        # include:
          # ---- Linux ----------------------------------------------------
          # - os: ubuntu-latest
          #   arch: x86_64
          #   target: x86_64-unknown-linux-gnu
          # - os: ubuntu-latest
          #   arch: aarch64
          #   target: aarch64-unknown-linux-gnu
          # ---- macOS ----------------------------------------------------
          # - os: macos-latest
          #   arch: x86_64
          #   target: x86_64-apple-darwin
          # - os: macos-latest
          #   arch: aarch64
          #   target: aarch64-apple-darwin
          # ---- Windows ----------------------------------------------------
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          # - os: windows-latest
          #   target: x86_64-pc-windows-gnu
    env:
      RUSTFLAGS: -C target-cpu=native
    steps:
      # -------------------------------------------------------------
      # Checkout the source
      # -------------------------------------------------------------
      - uses: actions/checkout@v5

      # -------------------------------------------------------------
      # Install Rust toolchain for the target
      # -------------------------------------------------------------
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      # -------------------------------------------------------------
      # Install X11 dev libs on the Ubuntu runner only
      # -------------------------------------------------------------
      - name: Install X11 libraries (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libx11-xcb-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev

      # -------------------------------------------------------------
      # Build
      # -------------------------------------------------------------
      - name: Build
        run: |
          cargo build --release
